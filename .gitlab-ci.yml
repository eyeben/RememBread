stages:
  - build_and_push
  - deploy

# Build & Docker Build & Push Stage
build_and_push:
  stage: build_and_push
  tags:
    - runner
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk update && apk add openjdk17 gradle git
    - echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
  script:
    - cd be/remembread
    - echo "Building Spring Boot Application"
    - gradle build -x test
    - echo "Building Docker Image"
    - docker build -t ${DOCKER_USERNAME}/${DOCKER_BACKEND_IMAGE_NAME} .
    - echo "Pushing Docker Image"
    - docker push ${DOCKER_USERNAME}/${DOCKER_BACKEND_IMAGE_NAME}
  after_script:
    - docker logout
  only:
    - be

# Deploy Stage
deploy:
  stage: deploy
  tags:
    - runner  # 이 태그를 가진 러너에서만 실행
  before_script:
    - apk update && apk add openssh-client
  script:
    - echo "Deploying to the server"
    - mkdir -p ~/.ssh
    - echo "${SSH_PRIVATE_KEY}" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-agent sh -c "ssh-add ~/.ssh/id_rsa && ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} 'sudo docker pull ${DOCKER_USERNAME}/${DOCKER_BACKEND_IMAGE_NAME} && sudo docker stop my-backend-container || true && sudo docker rm my-backend-container || true && sudo docker run --network host -d --name my-backend-container -p 8080:8080 ${DOCKER_USERNAME}/${DOCKER_BACKEND_IMAGE_NAME} && sudo docker image prune -f'"
  only:
    - be
